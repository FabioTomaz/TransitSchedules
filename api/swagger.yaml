openapi: 3.0.1
info:
  title: Transportation Schedules
  description: 'Api for managing schedules from transportation services. Supports the General Transit Feed Specification (GTFS) format. You can find out more about GTFS at [GTFS Official Website](http://swagger.io). '
  termsOfService: http://swagger.io/terms/
  contact:
    email: fmts@ua.pt
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about this project!
  url: http://code.ua.pt/projects/easytransports?jump=welcome
servers:
# Added by API Auto Mocking Plugin
- description: SwaggerHub API Auto Mocking
  url: http://localhost:3000
- url: https://transportation-schedules.herokuapp.com/
- url: https://virtserver.swaggerhub.com/FabioTomaz/TransportationSchedules/1.0.0
tags:
- name: Routes
  description: Routing Endpoints 
- name: Agencies
  description: Agencies Endpoints
- name: Stops
  description: Stops Endpoints
- name: GTFS
  description: General Transportation Format Specification
  externalDocs:
    description: Find more about static GTFS
    url: https://developers.google.com/transit/gtfs
paths:
  /gtfs/{agencyKey}:
    delete:
      tags:
      - GTFS
      summary: Deletes a gtfs
      operationId: deleteGtfs
      parameters:
      - name: agencyKey
        in: path
        description: Agency Key representent of the gtfs to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Successful operation
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Agency/GTFS not found
          content: {}
  /gtfs:
    post:
      tags:
      - GTFS
      summary: Uploud new gtfs
      description: This can only be done by the logged in user.
      operationId: createUser
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        default:
          description: successful operation
          content: {}
  /route/{routeId}:
    get:
      tags:
      - Routes
      summary: Get a specific route
      description: Returns a single route from a routeId and a agencyKey
      operationId: getRouteById
      parameters:
      - name: routeId
        in: path
        description: ID of the route to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
        400:
          description: Must provide both latitude and longitude
          content: {}
        404:
          description: Routes not found
          content: {}
  /route/{fromStopId}/{toStopId}:
    get:
      tags:
      - Routes
      summary: Route trajectory between stops
      description: Returns a trajectory between the stop ids specified. Also returns data like fares, stops in the middle etc.
      operationId: routingBetweenStops
      parameters:
      - name: fromStopId
        in: path
        description: ID of the stop to departure from
        required: true
        schema:
          type: integer
          format: int64
      - name: toStopId
        in: path
        description: ID of the stop to arrive to
        required: true
        schema:
          type: integer
          format: int64
      - name: departureDate
        in: query
        schema:
          type: integer
          format: int64
        description: The number of items to skip before starting to collect the result set
      - name: arrivalDate
        in: query
        schema:
          type: integer
        description: The numbers of items to return
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RouteMapping'
        400:
          description: Invalid stopId
          content: {}
        404:
          description: No route available
          content: {}
  /agency:
      get:
        tags:
        - Agencies
        summary: Get all transportation agencies
        description: Returns all agencies stored frmo GTFS's uplouded
        operationId: getAgencies
        responses:
          200:
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Agency'
          400:
            description: Must provide both latitude and longitude
            content: {}
          404:
            description: No agencies were found
            content: {}    
  /agency/{agencyKey}:
      get:
        tags:
        - Agencies
        summary: Get a specific transportation agency
        description: Returns a single agency from agencyKey
        operationId: getAgencyById
        parameters:
        - name: agencyKey
          in: path
          description: ID of the route to return
          required: true
          schema:
            type: string
        responses:
          200:
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Agency'
          400:
            description: Invalid ID supplied
            content: {}
          404:
            description: Agency not found
            content: {}    
  /stop:
      get:
        tags:
        - Stops
        summary: Get all stops
        description: Returns all stops stored from GTFS's uplouded
        operationId: getStops
        responses:
          200:
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Stop'
          400:
            description: Must provide both latitude and longitude
            content: {}
          404:
            description: Stops not found
            content: {}    
  /stop/{stopId}:
      get:
        tags:
        - Stops
        summary: Get a specific stop
        description: Returns a single stop 
        operationId: getStopById
        parameters:
        - name: stopId
          in: path
          description: ID of the stop to return
          required: true
          schema:
            type: integer
            format: int64
        responses:
          200:
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Stop'
          400:
            description: Invalid ID supplied
            content: {}
          404:
            description: Stop not found
            content: {}    
components:
  schemas:
    Agency:
      type: object
      properties:
        agency_key:
          type: string
        agency_id:
          type: integer
          format: int64
        agency_name:
          type: string
        agency_url:
          type: string
        agency_timezone:
          type: string
        agency_lang:
          type: string
        agency_phone:
          type: string
    Route:
      type: object
      properties:
        agency_key: 
          type: string
        route_id:
          type: string
        route_name:
          type: boolean
        route_type:
          type: string
        route_url:
          type: string
    RouteMapping:
      type: object
      properties:
        routes:
          type: array
          items:
            type: object
        departureStop:
          type: integer
          format: int64
        arrivalStop:
          type: integer
          format: int64
        departureTime: 
          type: string
        arrivalTime:
          type: string
        fareTotal: 
          type: number
          format: double
    Stop:
      type: object
      properties:
        agency_key: 
          type: string
        stop_id:
          type: string
        stop_name:
          type: boolean
        stop_lat:
          type: string
        stop_lon:
          type: string